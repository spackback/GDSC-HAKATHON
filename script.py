# Create a comprehensive requirements.txt file for the Cherry AI Desktop Assistant
requirements = [
    "# Core AI and Language Processing",
    "google-genai>=1.0.0",
    "openai-whisper>=20230918",
    "vosk>=0.3.45",
    "SpeechRecognition>=3.10.0",
    "",
    "# Text-to-Speech",
    "pyttsx3>=2.90",
    "gTTS>=2.3.0",
    "",
    "# Desktop Automation and GUI",
    "pyautogui>=0.9.54",
    "PyQt5>=5.15.10",
    "tkinter",  # Usually included with Python",
    "pystray>=0.19.4",
    "pillow>=10.0.0",
    "",
    "# Computer Vision and Screen Capture",
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    "screeninfo>=0.8",
    "",
    "# Keyboard and Mouse Control",
    "pynput>=1.7.6",
    "keyboard>=0.13.5",
    "mouse>=0.7.1",
    "",
    "# Audio Processing",
    "pyaudio>=0.2.11",
    "sounddevice>=0.4.6",
    "librosa>=0.10.0",
    "",
    "# Memory and Context Management",
    "chromadb>=0.4.15",
    "sentence-transformers>=2.2.2",
    "faiss-cpu>=1.7.4",
    "",
    "# File and Data Processing",
    "python-docx>=0.8.11",
    "PyPDF2>=3.0.1",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.2",
    "",
    "# Threading and Async",
    "asyncio",
    "threading",
    "concurrent.futures",
    "",
    "# Configuration and Logging",
    "python-dotenv>=1.0.0",
    "logging",
    "configparser",
    "",
    "# Wake Word Detection (Optional premium)",
    "# pvporcupine>=3.0.0  # Uncomment if using Picovoice",
    "",
    "# System Integration",
    "psutil>=5.9.5",
    "win32gui;platform_system=='Windows'",
    "pywin32;platform_system=='Windows'",
    "AppKit;platform_system=='Darwin'",
    "python3-xlib;platform_system=='Linux'"
]

# Write to requirements.txt
with open('requirements.txt', 'w') as f:
    f.write('\n'.join(requirements))

print("Created requirements.txt with all necessary packages")
print("\nRequirements file contents:")
print('\n'.join(requirements))